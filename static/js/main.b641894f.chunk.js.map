{"version":3,"sources":["Components/AddCustomer.jsx","Components/TableComp.jsx","Components/Customers.jsx","Components/ManageInvoices.jsx","Components/AddInvoice.jsx","Components/InvoiceItems.jsx","Components/Navigation.jsx","Components/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","position","left","transform","padding","header","textAlign","button","AddCustomer","classes","object","compName","contFname","contLname","emailAdd","contNum","addr","town","post","useState","customer","setCustomer","handleChange","e","label","target","value","isDone","setIsDone","Grid","autoComplete","xs","className","container","justify","gutterBottom","Button","onClick","setTimeout","window","$customers","push","color","variant","TextField","id","type","onChange","style","visibility","multiline","table","top","width","headers","background","cell","TableComp","props","TableContainer","component","Paper","Table","size","aria-label","TableHead","TableRow","map","TableCell","align","TableBody","customers","scope","invoices","invoice","item","rate","timeSpent","total","margin","list","Customers","isAdding","setIsAdding","Typography","Divider","marginBottom","startIcon","paragraph","ManageInvoices","$invoiceItems","setInvoice","parseInt","InvoiceItems","AddInvoice","drawerWidth","theme","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","Navigation","useTheme","React","open","setOpen","lists","title","icon","link","history","useHistory","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","Drawer","paper","direction","List","ListItem","ListItemIcon","ListItemText","primary","exact","path","createMuiTheme","palette","main","secondary","error","typography","fontFamily","join","Layout","ThemeProvider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b641894f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        position:\"relative\",\r\n        left:\"50%\",\r\n        transform:\"translateX(-50%)\",\r\n        padding:\"2em 4em\"\r\n    },\r\n    header:{\r\n        textAlign:\"left\"\r\n    },\r\n    button:{\r\n        position:\"relative\",\r\n        left:\"50%\"\r\n    },\r\n})\r\n\r\nconst AddCustomer = () => {\r\n    const classes = useStyles()\r\n\r\n    let object = {\r\n        compName: \"\",\r\n        contFname: \"\",\r\n        contLname: \"\",\r\n        emailAdd: \"\",\r\n        contNum: \"\",\r\n        addr: \"\",\r\n        town: \"\",\r\n        post: \"\"\r\n    }\r\n    \r\n    const [customer, setCustomer] =  useState(object)\r\n\r\n    const handleChange = (e,label) => {\r\n        \r\n\r\n        if(label===\"compName\")  object.compName = e.target.value\r\n        if(label===\"contFname\")  object.contFname = e.target.value\r\n        if(label===\"contLname\")  object.contLname = e.target.value\r\n        if(label===\"emailAdd\")  object.emailAdd = e.target.value\r\n        if(label===\"contNum\")  object.contNum = e.target.value\r\n        if(label===\"addr\")  object.addr = e.target.value\r\n        if(label===\"town\")  object.town = e.target.value\r\n        if(label===\"post\")  object.post = e.target.value\r\n\r\n    }\r\n\r\n    const [isDone,setIsDone] = useState(false)\r\n\r\n    const addCustomer = () => {\r\n\r\n        if(object.compName!==\"\"){\r\n            setIsDone(true)\r\n            setTimeout(function() {\r\n                setIsDone(false)\r\n            }, 2000);\r\n\r\n\r\n            setCustomer(object)\r\n            window.$customers.push(customer)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <form  autoComplete=\"off\">\r\n                <Grid xs={10} className={classes.root} container justify=\"center\" gutterBottom>\r\n                    \r\n                    <Button onClick={addCustomer} color={isDone ? (\"success\") : (\"primary\")} variant=\"contained\" className={classes.button}>\r\n                        {\r\n                            isDone ? (<DoneIcon/>) : (<AddIcon/>)\r\n                        }\r\n                    </Button>\r\n                    <Grid xs={12} container justify=\"space-between\">\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Company Name\" onChange={e => {handleChange(e,\"compName\")}}/>\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Contact Person First Name\"  onChange={e => {handleChange(e,\"contFname\")}}/>\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Contact Person Last Name\"  onChange={e => {handleChange(e,\"contLname\")}}/>\r\n                    </Grid>\r\n                    <Grid xs={12} container justify=\"space-between\" >\r\n                        <TextField id=\"standard-basic\" type=\"email\" label=\"Email Address\"  onChange={e => {handleChange(e,\"emailAdd\")}}/>\r\n                        <TextField id=\"standard-basic\" label=\"Contact Number\"  onChange={e => {handleChange(e,\"contNum\")}}/>\r\n                        <TextField id=\"standard-basic\" label=\"Contact Number\" style={{visibility:\"hidden\"}} />\r\n                    </Grid>\r\n                    <Grid xs={12} container justify=\"space-between\">\r\n                        <TextField id=\"standard-basic\" label=\"Address\" multiline  onChange={e => {handleChange(e,\"addr\")}}/>\r\n                        <TextField id=\"standard-basic\" label=\"Town/City\"  onChange={e => {handleChange(e,\"town\")}}/>\r\n                        <TextField id=\"standard-basic\" label=\"Post Code\"  onChange={e => {handleChange(e,\"post\")}}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddCustomer\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    top:\"5em\",\r\n    width:\"60%\",\r\n    position:\"relative\",\r\n    left:\"50%\",\r\n    transform:\"translateX(-50%)\"\r\n  },\r\n  headers:{\r\n    background:\"orange\",\r\n  },\r\n  cell:{\r\n    background:\"pink\",\r\n    width:\"20%\"\r\n  }\r\n});\r\n\r\n\r\nexport default function TableComp(props) {\r\n  const classes = useStyles();\r\n\r\n  const tableContent = () => {\r\n    if(props.label===\"addCustomers\"){\r\n      return (\r\n        props.customers.map(customer => {\r\n          return(\r\n            <TableRow key={customer.compName}>\r\n              <TableCell align=\"right\" component=\"th\" scope=\"row\">\r\n                {customer.compName}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{customer.contFname} {customer.contLname}</TableCell>\r\n              <TableCell align=\"right\">{customer.emailAdd}</TableCell>\r\n              <TableCell align=\"right\">{customer.contNum}</TableCell>\r\n              <TableCell align=\"right\">{customer.addr},{customer.town}-{customer.post}</TableCell>\r\n            </TableRow>\r\n          )\r\n        })\r\n        )\r\n    }\r\n    if(props.label===\"invoiceItems\"){\r\n      return (\r\n        props.invoices.map(invoice => {\r\n          return(\r\n            <TableRow key={invoice.item}>\r\n              <TableCell align=\"right\" component=\"th\" scope=\"row\">\r\n                {invoice.item}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{invoice.rate}</TableCell>\r\n              <TableCell align=\"right\">{invoice.timeSpent}</TableCell>\r\n              <TableCell align=\"right\">{invoice.total}</TableCell>\r\n            </TableRow>\r\n          )\r\n        })\r\n      )\r\n    }\r\n      \r\n    }\r\n  \r\n  return (\r\n    <TableContainer component={Paper} className={classes.table}>\r\n      <Table  size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n\r\n          <TableRow className={classes.headers}>\r\n            {\r\n                props.headers.map(header => {\r\n                  return(\r\n                      <TableCell className={classes.cell} align=\"right\">{header}</TableCell>\r\n                  )\r\n                })\r\n              }\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            tableContent()\r\n          }\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { Typography, Button, Grid,Divider } from '@material-ui/core'\r\nimport React , {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddCustomer from './AddCustomer';\r\nimport TableComp from './TableComp';\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        margin:0,\r\n        padding:0\r\n    },\r\n    header:{\r\n        textAlign:\"left\"\r\n    },\r\n    list:{\r\n    }\r\n})\r\n\r\nconst Customers = () => {\r\n    const classes = useStyles()\r\n\r\n    const [isAdding, setIsAdding] = useState(false);\r\n\r\n    const headers = [\"Company Name\",\"Contact Name\", \"Email\", \"Contact\", \"Address\"]\r\n\r\n    return (\r\n        <Grid xs={12} className={classes.root}>\r\n\r\n            <Typography variant=\"h2\" className={classes.header} gutterBottom>\r\n                Customers\r\n            </Typography>\r\n            <Divider style={{marginBottom:40}} gutterBottom/>\r\n            \r\n            <Grid container justify=\"left\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<CreateIcon />}\r\n                    onClick={()=>setIsAdding(true)}\r\n                    gutterBottom\r\n                >\r\n                    Add new customer\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                \r\n                {\r\n                    isAdding && (\r\n                        <section>\r\n                            <AddCustomer/>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => setIsAdding(false)}>\r\n                                Done\r\n                            </Button>\r\n                        </section>\r\n                    )\r\n                }\r\n\r\n            </Grid>\r\n\r\n\r\n            <div xs={12} className={classes.list}>\r\n                <Typography paragraph>\r\n\r\n                    <TableComp label=\"addCustomers\" customers={window.$customers} headers={headers}/>\r\n                </Typography>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Customers\r\n","import React from 'react'\r\n\r\nconst ManageInvoices = () => {\r\n    return (\r\n        <div>\r\n            Manage Invoice\r\n            {\r\n            window.$customers.map(customer => {\r\n              return(\r\n                <div key={customer.compName}>\r\n                  <div align=\"right\" component=\"th\" scope=\"row\">\r\n                    {customer.compName}\r\n                  </div>\r\n                  <div align=\"right\">{customer.contFname} {customer.contLname}</div>\r\n                  <div align=\"right\">{customer.emailAdd}</div>\r\n                  <div align=\"right\">{customer.contNum}</div>\r\n                  <div align=\"right\">{customer.addr},{customer.town}-{customer.post}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n\r\n        {\r\n            window.$invoiceItems.map(invoice => {\r\n              return(\r\n                <div key={invoice.item}>\r\n                  <div align=\"right\" component=\"th\" scope=\"row\">\r\n                    {invoice.item}\r\n                  </div>\r\n                  <div align=\"right\">{invoice.rate} {invoice.contLname}</div>\r\n                  <div align=\"right\">{invoice.timeSpent}</div>\r\n                  <div align=\"right\">{invoice.total}</div>\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ManageInvoices\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { Button, Grid, TextField } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        position:\"relative\",\r\n        left:\"50%\",\r\n        transform:\"translateX(-50%)\",\r\n        padding:\"2em 4em\"\r\n    },\r\n    header:{\r\n        textAlign:\"left\"\r\n    },\r\n    button:{\r\n        position:\"relative\",\r\n        left:\"50%\"\r\n    },\r\n})\r\n\r\nconst AddCustomer = () => {\r\n    const classes = useStyles()\r\n\r\n    let object = {\r\n            item: \"\",\r\n            rate: 0,\r\n            timeSpent:2,\r\n            total:0\r\n    }\r\n    \r\n    const [invoice, setInvoice] =  useState(object)\r\n\r\n    const handleChange = (e,label) => {\r\n        \r\n\r\n        if(label===\"item\")  object.item = e.target.value\r\n        if(label===\"rate\")  object.rate = e.target.value\r\n        if(label===\"timeSpent\")  object.timeSpent = e.target.value\r\n    }\r\n\r\n    const [isDone,setIsDone] = useState(false)\r\n\r\n    const addInvoice = () => {\r\n\r\n        if(object.item!==\"\"){\r\n            setIsDone(true)\r\n            setTimeout(function() {\r\n                setIsDone(false)\r\n            }, 2000);\r\n\r\n\r\n            object.total = parseInt(object.rate)*parseInt(object.timeSpent)\r\n            setInvoice(object)\r\n            window.$invoiceItems.push(invoice)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <form  autoComplete=\"off\">\r\n                <Grid xs={10} className={classes.root} container justify=\"center\" gutterBottom>\r\n                    \r\n                    <Button onClick={addInvoice} color={isDone ? (\"success\") : (\"primary\")} variant=\"contained\" className={classes.button}>\r\n                        {\r\n                            isDone ? (<DoneIcon/>) : (<AddIcon/>)\r\n                        }\r\n                    </Button>\r\n                    <Grid xs={12} container justify=\"space-between\">\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Invoice Item\" onChange={e => {handleChange(e,\"item\")}}/>\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Rate (Rs/hr)\"  onChange={e => {handleChange(e,\"rate\")}}/>\r\n                        <TextField id=\"standard-basic\" type=\"text\" label=\"Whoops\" style={{visibility:\"hidden\"}} />\r\n                    </Grid>\r\n                    <Grid xs={12} container justify=\"space-between\" >\r\n                        <TextField id=\"standard-basic\" type=\"email\" label=\"Working Hours\"  onChange={e => {handleChange(e,\"timeSpent\")}}/>\r\n                        <TextField id=\"standard-basic\" label=\"Contact Number\" style={{visibility:\"hidden\"}} />\r\n                        <TextField id=\"standard-basic\" label=\"Contact Number\" style={{visibility:\"hidden\"}} />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default AddCustomer\r\n","import { Typography, Button, Grid,Divider } from '@material-ui/core'\r\nimport React , {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport AddInvoice from './AddInvoice';\r\nimport TableComp from './TableComp';\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        margin:0,\r\n        padding:0\r\n    },\r\n    header:{\r\n        textAlign:\"left\"\r\n    },\r\n    list:{\r\n    }\r\n})\r\n\r\nconst InvoiceItems = () => {\r\n    const classes = useStyles()\r\n\r\n    const [isAdding, setIsAdding] = useState(false);\r\n\r\n    const headers = [\"Invoice Item\",\"Rate (Rs/hr)\", \"Working hours\", \"Total Cost\"]\r\n\r\n    return (\r\n        <Grid xs={12} className={classes.root}>\r\n\r\n            <Typography variant=\"h2\" className={classes.header} gutterBottom>\r\n                Invoice Items\r\n            </Typography>\r\n            <Divider style={{marginBottom:40}} gutterBottom/>\r\n            \r\n            <Grid container justify=\"left\">\r\n                <Button variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    startIcon={<CreateIcon />}\r\n                    onClick={()=>setIsAdding(true)}\r\n                    gutterBottom\r\n                >\r\n                    Add new invoice item\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                \r\n                {\r\n                    isAdding && (\r\n                        <section>\r\n                            <AddInvoice/>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => setIsAdding(false)}>\r\n                                Done\r\n                            </Button>\r\n                        </section>\r\n                    )\r\n                }\r\n\r\n            </Grid>\r\n\r\n\r\n            <div xs={12} className={classes.list}>\r\n                <Typography paragraph>\r\n\r\n                    <TableComp label=\"invoiceItems\" invoices={window.$invoiceItems} headers={headers}/>\r\n                </Typography>\r\n            </div>\r\n\r\n\r\n\r\n            \r\n            \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default InvoiceItems\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {    \r\n    Drawer,\r\n    AppBar,\r\n    Toolbar,\r\n    List,\r\n    CssBaseline,\r\n    Typography,\r\n    Divider,\r\n    IconButton,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n\r\n} from '@material-ui/core';\r\n\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\n\r\nimport {Switch, Route, Link, useHistory} from 'react-router-dom'\r\nimport Customers from './Customers'\r\nimport ManageInvoices from './ManageInvoices'\r\nimport InvoiceItems from './InvoiceItems';\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Navigation(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const lists = [\r\n      {\r\n          id:1,\r\n          title:\"Manage Customer\",\r\n          icon: <FaceIcon/>,\r\n          link:\"/\"\r\n      },\r\n      {\r\n        id:2,\r\n        title:\"Manage Invoices\",\r\n        icon:<ReceiptIcon/>,\r\n        link:\"/invoice\"\r\n    },\r\n    {\r\n        id:1,\r\n        title:\"Add Invoices Items\",\r\n        icon:<PostAddIcon/>,\r\n        link:\"/invoiceItems\"\r\n    }\r\n  ]\r\n  const history = useHistory()\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" color=\"primary\" className={clsx(classes.appBar, {[classes.appBarShift]: open,})}>\r\n        <Toolbar>\r\n\r\n          {/*------------------------------ MENU AND LOGO ----------------------- */}\r\n          <IconButton color=\"inherit\" aria-label=\"open drawer\" onClick={handleDrawerOpen} edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" noWrap>\r\n            Wrytin\r\n          </Typography>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n          \r\n      {/* --------------------------- SIDE NAVBAR ------------------------------- */}\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        {/* ---------------------------- LINKS ------------------------------------- */}\r\n        <List>\r\n          {lists.map((list) => (\r\n            <Link onClick={() => {history.push(`${list.link}`)}}>\r\n              <ListItem button key={list.title}>\r\n                <ListItemIcon>{list.icon}</ListItemIcon>\r\n                <ListItemText primary={list.title} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n\r\n      </Drawer>\r\n\r\n      {/* ------------------------------ CONTENT ---------------------------------------  */}\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Customers} />\r\n\r\n                <Route exact path=\"/invoice\">\r\n                  <Typography paragraph>\r\n                    <ManageInvoices/>\r\n                  </Typography>\r\n                </Route>\r\n\r\n                <Route exact path=\"/invoiceItems\">\r\n                  <Typography paragraph>\r\n                    <InvoiceItems/>\r\n                  </Typography>\r\n                </Route>\r\n\r\n            </Switch>\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Navigation from './Navigation'\r\n\r\nconst theme = createMuiTheme({\r\n    palette:{\r\n        primary:{\r\n            main:'#539cff'\r\n        },\r\n        secondary:{\r\n            main:\"#EEA47F\"\r\n        },\r\n        error:{\r\n            main:\"#414756\"\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: ['\"Montserrat\"', 'Open Sans'].join(',')\r\n    }\r\n})\r\n\r\nwindow.$customers = [\r\n    {\r\n        compName: \"JR Ltd.\",\r\n        contFname: \"Jayraj\",\r\n        contLname: \"Rathod\",\r\n        emailAdd: \"jayrahod5@gmail.com\",\r\n        contNum: \"1234567890\",\r\n        addr: \"Abc,defgh,ijk\",\r\n        town: \"xyz\",\r\n        post: \"123456\"\r\n    }]\r\n\r\n    window.$invoiceItems = [\r\n        {\r\n            item: \"Work Expenses\",\r\n            rate: 150,\r\n            timeSpent: 2,\r\n        }]\r\n    window.$invoiceItems[0].total=(window.$invoiceItems[0].rate*window.$invoiceItems[0].timeSpent)\r\n\r\n\r\nconst Layout = () => {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n\r\n            {/* NAVIGATION */}\r\n            <Navigation/>\r\n\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import './App.css';\nimport Layout from './Components/Layout'\nimport {\n  BrowserRouter as Router\n} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}